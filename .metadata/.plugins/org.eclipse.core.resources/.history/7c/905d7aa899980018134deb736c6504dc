package com.runsystem.datnt.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.runsystem.datnt.business.SearchStudent;
import com.runsystem.datnt.database.service.StudentInfoService;
import com.runsystem.datnt.dto.Pagenation;
import com.runsystem.datnt.dto.PagenationResult;
import com.runsystem.datnt.dto.Student;
import com.runsystem.datnt.validation.NumberValidator;
import com.runsystem.datnt.validation.StudentValidator;

@Controller
public class SearchController {
	
	@Autowired
	StudentInfoService infoService;
	
	@PostMapping(value = "/admin/search", produces = {MediaType.APPLICATION_JSON_VALUE})
	public @ResponseBody PagenationResult onSearch(@ModelAttribute Student student, BindingResult bindingResult, HttpServletRequest request) {
		HttpSession      session   = request.getSession();
		StudentValidator validator = new StudentValidator();
		SearchStudent    search    = new SearchStudent();
		validator.validate(student, bindingResult);
		if (bindingResult.hasErrors()) {
			return null;
		}
		
		PagenationResult pageResult = search.search(0, student, infoService);
		session.setAttribute("student", student);
		return pageResult;
	}
	
	@GetMapping(value = "/admin/view")
	public @ResponseBody PagenationResult changePage(@RequestParam(value = "page", required = true) String page, 
			HttpServletRequest request) {
		HttpSession   session = request.getSession();
		SearchStudent search  = new SearchStudent();
		Student       student = (Student) session.getAttribute("pagenation");
		
		if (!NumberValidator.isNumber(page)) {
			return null;
		}
		
		if (student != null) {
			PagenationResult pageResult = search.search(Integer.parseInt(page), student, infoService);
			return pageResult;
		}
		
		return null;
	}
}

/**
 * Class LoginController
 */
package com.runsystem.datnt.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.runsystem.datnt.business.CheckLogin;
import com.runsystem.datnt.database.service.StudentRecordsService;
import com.runsystem.datnt.database.service.UserService;
import com.runsystem.datnt.dto.StudentRecords;
import com.runsystem.datnt.dto.User;
import com.runsystem.datnt.validation.UserValidator;

@Controller
public class LoginController {

	@Autowired
	UserService userService;
	
	@Autowired
	StudentRecordsService service;

	/*
	 * Get POST request, check input validation, search from database and redirect to admin page,
	 * set user session if user is exsit.
	 * 
	 * @param user 
	 * @param binhdingResult
	 * @param request 
	 * @param model
	 * 
	 * @return String 
	 */
	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public String onLogin(@ModelAttribute User user, BindingResult bindingResult, HttpServletRequest request, Model model) {
		HttpSession session = request.getSession();
		UserValidator validator = new UserValidator();
		validator.validate(user, bindingResult);

		System.out.println("go here");
		System.out.println(user.getUsername());
		
		if (bindingResult.hasErrors()) {
			return "login";
		}
		
		CheckLogin check = new CheckLogin();

		//if user is exist, set user session and interval
		if (check.canLogin(userService, user)) {
			session.setAttribute("user", user);
			session.setMaxInactiveInterval(15*60);
			return "redirect:admin";
		}
		
		model.addAttribute("user", new User());
		model.addAttribute("message", "Incorrect username or password!");
		return "login";
	}

	@RequestMapping(value = {"/","/login"}, method = RequestMethod.GET)
	public String onAccess(Model model) {
		model.addAttribute("user", new User());
		return "login";
	}
}
